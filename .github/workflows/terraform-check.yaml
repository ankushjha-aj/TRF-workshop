name: Terraform check

# Triggering the workflow on a workflow_call event
on:
  workflow_call:
    inputs:
      default_env:
        type: string
        required: false
        default: dev
        description: Default env name
    secrets:
      GH_INFRA_PAT:
        required: true
      role-to-assume:
        required: true
      role-session-name:
        required: true

jobs:
  # Job to Validate Terraform Configuration
  validate:
    name: "Validate"
    runs-on: ubuntu-latest
    steps:
      # Check out the project repository          
      - name: Checkout Project
        uses: actions/checkout@v4
      
      # Configure AWS Creds
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.role-to-assume }}
          role-session-name: ${{ secrets.role-session-name }}
      # Install Mozilla Sops Binary
      - name: Sops Binary Installer
        uses: mdgreenwald/mozilla-sops-action@v1.4.1
        with:
          version: 'v3.7.3' # default is latest stable
        id: install
      # Initialize Terraform workspace
      - name: Terraform init
        run: make ENV=${{ inputs.default_env }} terraform/init
      # Validate Terraform configuration
      - name: Terraform validate
        run: make ENV=${{ inputs.default_env }} terraform/validate

  # Job to Plan Terraform Changes
  plan:
    name: "Plan"
    needs: [validate]
    runs-on: ubuntu-latest
    concurrency: terraform-${{ matrix.env }}
    env:
      GITHUB_TOKEN: ${{ secrets.GH_INFRA_PAT }}
    strategy:
      fail-fast: false
      matrix:
          env:
          - stage
          - dev
          - prod
    steps:
      # Check out the project repository
      - name: Checkout Project
        uses: actions/checkout@v3
      # Configure AWS Creds
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.role-to-assume }}
          role-session-name: ${{ secrets.role-session-name }}
      # Install Mozilla Sops Binary
      - name: Sops Binary Installer
        uses: mdgreenwald/mozilla-sops-action@v1.4.1
        with:
          version: 'v3.7.3' # default is latest stable
        id: install
      # Initialize Terraform workspace
      - name: Terraform init
        run: make ENV=${{ matrix.env }} terraform/init
      # Generate Terraform execution plan with locking disabled 
      - name: Terraform plan
        run: make ENV=${{ matrix.env }} TF_CMD_ARGS='-lock=false' terraform/plan